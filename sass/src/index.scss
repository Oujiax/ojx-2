@import './main.scss';
/* 变量的定义 */
$color: #eecc00;
$color: #eeccff!default;  //默认变量
$student: '#student-list li';
$attr:width;  //特殊变量的引用

#container{
    width: 1000px;
    margin: 0 auto;
    background: $color;
    font-size: 20px;
    // 选择器的嵌套
    .box1{
        width: 800px;
        height: 300px;
        background: #ccc;
        a{
            background: red;
            &:hover{ /* &（引用父选择器） 对当前这个元素的引用 */
                background: blue;
            }
        }
        &-item{
            color: green;
            // 属性的嵌套
            padding: {
                top: 20px;
                left: 50px;
            }
        }
        // 特殊变量（选择器、属性、属性的值三个位置都可使用）
        #{$student}{
            list-style: none;
            #{$attr}: 200px;//特殊变量的引用
            color: #{$color};
        }
    }
    // 混合宏（若给变量设置默认值，则所有变量都要设置，否则报错）
    @mixin box ($w:200px,$h:200px,$p:20px) {
        width: $w;
        height: $h;
        padding: $p;
    }
    .box2{
        // 如果传的参数不全，则需要指明所传参数的含义
        @include box($h:400px,$p:20px);
        background: red;
    }
    .box3{
        @include box(400px,100px,50px);
        background: blue;
    }
    .box4{
        width: 20px;
        height: 20px;
    }
    .box5{
        @extend .box4;
        font-size: 50px;
    }
    .box6{
        // 只能写一个单位
        width: 20px*8;
        // 除法要在外面填一个（）,除数不能有单位
        height: (90px/3);
        padding: percentage(800px/600px);
    }
    $img: 'bg';
    $str: 'hello world';
    .box7{
        background: #ccc url('./imgs/'+ $img +'.jpg');
        &::after{
            // 转换为大写
            content: to-upper-case($str);
            // 返回的长度没有单位，不能直接作为属性的值
            font-size: str-length($str);
            // 索引从1开始
            content: str-index($str, 'l');
            // 从第n位开始插入
            content: str-insert($str, '222', 4);
        }
    }
    .box8{
        color: $color;
        // 更浅
        color: lighten($color, 30%);
        // 更深
        color: darken($color, 20%);
        // 更不透明
        color: opacify($color, 0.3);
        // 更透明
        color: transparentize($color,0.3);
    }
    $list1: 1px solid #000;
    $list2: 1px solid;
    $list3: blue;
    .box9{
        border: $list1;
        // 列表后面追加值
        border: append($list2 , red);
        // 返回对应的索引值
        border: index($list1, solid);
        // 将两个列表拼接在一起
        border: join($list2, $list3);
        // 依据索引值找出对应的值
        color: nth($list1, 3);
        z-index: length($list1);
    }
    $map: (color1: red, color2: green, color3: blue);
    .box10{
        // 返回所有的key
        color: map-keys($map);
        //范湖所有的value
        color: map-values($map);
        // 是否含有该key(判断的是key,不是value)
        color: map-has-key($map, color3);
        // color: map-merge($map, (color4: black) );
        // color: map-remove($map, color2);
    }
    //从1-9，不包含10
    @for $i from 1 to 10 {
        .item#{$i} {
            width: 100px*$i;
        }
    }
    // 从1-10
    // @for $i from 1 through 10 {
    //     .item#{$i} {
    //         width: 100px*$i;
    //     }
    // }
    @each $item in $list1 {
        .item#{$item}{
            width: #{$item};
        }
    }
    $i: 1;
    @while $i<5 {
        .student{
            padding: 20px;
        }
        $i: $i+1;
    }
    @function fn1($n){
        @if ($n == 0) {
            @return red;
        }@else if ($n ==1){
            @return green;
        }@else {
            // @warn '注意！！';
            // @error '出现错误！！';
            @return blue;
            
        }
    }
    .box11{
        color: fn1(3);
    }
}
